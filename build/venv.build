BUILD_NAME=$1
BUILD_TAG=$2

export VENV_NAME="venv-${BUILD_NAME}-${BUILD_TAG}"
export PYFR_NAME="pyfr-${BUILD_NAME}-${BUILD_TAG}"

setup_pyfr_venv_prerequisites(){

    mkdir -p $VENV_LOCAL/$VENV_NAME
    python3.12 -m venv $VENV_LOCAL/$VENV_NAME
    source $VENV_LOCAL/$VENV_NAME/bin/activate
    pip install --upgrade pip
    pip install --no-cache-dir mpi4py   
    # Pause here, above line is problematic
    pip install --no-cache-dir pyfr setuptools rtree
    pip uninstall -y pyfr
}

setup_pyfr_venv_base(){
    git clone https://github.com/sambitmishra98/PyFR.git $GIT_LOCAL/Github_PyFR/${PYFR_NAME}
    cd $GIT_LOCAL/Github_PyFR/${PYFR_NAME}
    python3 setup.py develop
}

test_pyfr_venv_base(){
    git clone https://github.com/PyFR/PyFR-Test-Cases.git $GIT_LOCAL/Github_PyFR-Test-Cases/$VENV_NAME
    cd $GIT_LOCAL/Github_PyFR-Test-Cases/$VENV_NAME/2d-euler-vortex
    pyfr import euler-vortex.msh euler-vortex.pyfrm

    pyfr run -b openmp euler-vortex.pyfrm euler-vortex.ini

    pyfr partition 2 euler-vortex.pyfrm .
    mpirun -n 2 pyfr run -b openmp euler-vortex.pyfrm euler-vortex.ini

    pyfr partition 1 euler-vortex.pyfrm .
    pyfr run -b cuda euler-vortex.pyfrm euler-vortex.ini
    mpirun -n 2 pyfr run -b cuda euler-vortex.pyfrm euler-vortex.ini
}

setup_pyfr_venv_benchmarking(){
    cd $GIT_LOCAL/Github_PyFR/${PYFR_NAME}
    git checkout benchmark
    python3 setup.py develop
    pip3 install pandas matplotlib seaborn
}

# If venv does not exist, create it
if [ ! -d "$VENV_LOCAL/$VENV_NAME" ]; then
    setup_pyfr_venv_prerequisites
    setup_pyfr_venv_base
    setup_pyfr_venv_benchmarking
else
    source $VENV_LOCAL/$VENV_NAME/bin/activate
fi

echo -e "\nLocation of venv: $VENV_LOCAL/$VENV_NAME\nLocation of git: $GIT_LOCAL/Github_PyFR/${PYFR_NAME}\n"
