BUILD_NAME=$1
NODE_NAME=$2
BUILD_UCX_VER=$3
BUILD_OPENMPI_VER=$4


add_installation_to_path() {
    local name=$1
    local version=$2
    local install_root=$3
    local install_dir="${install_root}/${name}/${version}"

    # if the base directory does not exist, then echo a warning and return
    if [ ! -d "${install_dir}" ]; then
        echo -e "\e[31mERROR IN PATH ADDITION: ${install_dir} DOES NOT EXIST !!!!\e[0m"; return
    else
        echo -e "\e[32mAdding ${name} installation at ${install_dir} to PATH\e[0m"

        [ -d "${install_dir}/bin"           ] && export            PATH="${install_dir}/bin:$PATH"
        [ -d "${install_dir}/include"       ] && export           CPATH="${install_dir}/include:$CPATH"
        [ -d "${install_dir}/include"       ] && export          CPPATH="${install_dir}/include:$CPPATH"
        [ -d "${install_dir}/lib"           ] && export          LDPATH="${install_dir}/lib:$LDPATH"
        [ -d "${install_dir}/lib64"         ] && export          LDPATH="${install_dir}/lib64:$LDPATH"
        [ -d "${install_dir}/lib"           ] && export    LIBRARY_PATH="${install_dir}/lib:$LIBRARY_PATH"
        [ -d "${install_dir}/lib64"         ] && export    LIBRARY_PATH="${install_dir}/lib64:$LIBRARY_PATH"
        [ -d "${install_dir}/lib"           ] && export LD_LIBRARY_PATH="${install_dir}/lib:$LD_LIBRARY_PATH"
        [ -d "${install_dir}/lib64"         ] && export LD_LIBRARY_PATH="${install_dir}/lib64:$LD_LIBRARY_PATH"
        [ -d "${install_dir}/lib/pkgconfig" ] && export PKG_CONFIG_PATH="${install_dir}/lib/pkgconfig:$PKG_CONFIG_PATH"
    fi }


# --------------------- GETS ---------------------

get_ucx_pkg(){     
    mkdir -p $PKG_DOWNLOAD/ucx/$BUILD_UCX_VER ; cd $PKG_DOWNLOAD/ucx/$BUILD_UCX_VER
    echo "Downloading UCX in $PKG_DOWNLOAD/ucx/$BUILD_UCX_VER";
    wget https://github.com/openucx/ucx/releases/download/v$BUILD_UCX_VER/ucx-$BUILD_UCX_VER.tar.gz -P $PKG_DOWNLOAD/ucx/$BUILD_UCX_VER
    tar -xf ucx-$BUILD_UCX_VER.tar.gz ; rm ucx-$BUILD_UCX_VER.tar.gz
}

get_openmpi_pkg(){
    mkdir -p $PKG_DOWNLOAD/openmpi/$BUILD_OPENMPI_VER
    cd $PKG_DOWNLOAD/openmpi/$BUILD_OPENMPI_VER
    wget https://download.open-mpi.org/release/open-mpi/v4.1/openmpi-$BUILD_OPENMPI_VER.tar.gz -P $PKG_DOWNLOAD/openmpi/$BUILD_OPENMPI_VER
    tar -xf openmpi-$BUILD_OPENMPI_VER.tar.gz
    rm openmpi-$BUILD_OPENMPI_VER.tar.gz
}

# --------------------- SETUPS ---------------------

setup_ucx_pkg(){     
    cd $PKG_DOWNLOAD/ucx/$BUILD_UCX_VER/ucx-$BUILD_UCX_VER;     

    CMD="./configure --prefix=$PKG_LOCAL/${BUILD_NAME}-${NODE_NAME}/ucx/$BUILD_UCX_VER \
                     --enable-shared \
                     --with-cuda=$EBROOTCUDA \
                     --enable-devel-headers \
                     --enable-cma --enable-mt \
                     --with-rc \
                     --with-dc \
                     --with-ib-hw-tm \
                     --with-gdrcopy \
                     --with-mlx5-dv \
                     --without-verbs"

    echo $CMD ; 
    eval $CMD
    make clean ; make -j 48 ; make install
}

setup_openmpi_pkg(){
    cd $PKG_DOWNLOAD/openmpi/$BUILD_OPENMPI_VER/openmpi-$BUILD_OPENMPI_VER
    CMD="./configure --prefix=$PKG_LOCAL/${BUILD_NAME}-${NODE_NAME}/openmpi/${BUILD_OPENMPI_VER} \
                     --enable-shared \
                     --with-cuda=$EBROOTCUDA \
                     --with-ucx=$PKG_LOCAL/${BUILD_NAME}-${NODE_NAME}/ucx/$BUILD_UCX_VER \
                     --without-verbs \
                     --without-ofi"
    echo $CMD
    eval $CMD
    make clean ; make -j 48 ; make install
}

if [ ! -d "$PKG_DOWNLOAD/ucx/$BUILD_UCX_VER" ]; then
    echo "Downloading UCX in $PKG_DOWNLOAD/ucx/$BUILD_UCX_VER" ; get_ucx_pkg
fi

if [ ! -d "$PKG_LOCAL/${BUILD_NAME}-${NODE_NAME}/ucx/$BUILD_UCX_VER" ]; then
    echo "Setting up UCX in $PKG_LOCAL/${BUILD_NAME}-${NODE_NAME}/ucx/$BUILD_UCX_VER" ; setup_ucx_pkg
fi

add_installation_to_path ${BUILD_NAME}-${NODE_NAME}/ucx      $BUILD_UCX_VER     $PKG_LOCAL

if [ ! -d "$PKG_DOWNLOAD/openmpi/$BUILD_OPENMPI_VER" ]; then
    echo "Downloading OpenMPI in $PKG_DOWNLOAD/openmpi/$BUILD_OPENMPI_VER" ; get_openmpi_pkg
fi

if [ ! -d "$PKG_LOCAL/${BUILD_NAME}-${NODE_NAME}/openmpi/${BUILD_OPENMPI_VER}" ]; then
    echo "Setting up OpenMPI in $PKG_LOCAL/${BUILD_NAME}-${NODE_NAME}/openmpi/${BUILD_OPENMPI_VER}" ; setup_openmpi_pkg
fi

add_installation_to_path ${BUILD_NAME}-${NODE_NAME}/openmpi  $BUILD_OPENMPI_VER $PKG_LOCAL